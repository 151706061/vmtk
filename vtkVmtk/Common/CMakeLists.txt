SET (VTK_VMTK_COMMON_SRCS
  vtkvmtkMath.cxx
  )

ADD_LIBRARY (vtkvmtkCommon ${VTK_VMTK_COMMON_SRCS})
SET_TARGET_PROPERTIES(vtkvmtkCommon PROPERTIES LINKER_LANGUAGE CXX)
TARGET_LINK_LIBRARIES(vtkvmtkCommon vtkCommon)

INSTALL(TARGETS vtkvmtkCommon
LIBRARY DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
ARCHIVE DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
RUNTIME DESTINATION ${VTK_VMTK_INSTALL_BIN_DIR} 
COMPONENT RuntimeLibraries
)

#FILE(GLOB files "${VTK_VMTK_COMMON_SRCS}/*.h")
FILE(GLOB files "${VTK_VMTK_SOURCE_DIR}/Common/*.h")
#INSTALL(FILES ${files} vtkvmtkConstants.h vtkvmtkWin32Header.h DESTINATION ${VTK_VMTK_INSTALL_INCLUDE_DIR})
INSTALL(FILES ${files} DESTINATION ${VTK_VMTK_INSTALL_INCLUDE_DIR})

### START VMTK IN SLICER PATCH ###
IF (VTK_VMTK_IN_SLICER)
  SET(LIBS vtkvmtkCommon)

  FOREACH(LIB ${LIBS})
    slicer3_set_modules_output_path(${LIB})
  ENDFOREACH(LIB ${LIBS})
    
  slicer3_install_modules(${LIBS})
ENDIF (VTK_VMTK_IN_SLICER)
### END VMTK IN SLICER PATCH ###

IF (VTK_WRAP_PYTHON AND VTK_VMTK_WRAP_PYTHON)
  VTK_WRAP_PYTHON3(vtkvmtkCommonPython VTK_VMTK_COMMON_PYTHON_SRCS "${VTK_VMTK_COMMON_SRCS}")
  ADD_LIBRARY(vtkvmtkCommonPythonD ${VTK_VMTK_COMMON_PYTHON_SRCS})
  ADD_LIBRARY(vtkvmtkCommonPython MODULE vtkvmtkCommonPythonInit.cxx)
  TARGET_LINK_LIBRARIES(vtkvmtkCommonPythonD vtkvmtkCommon vtkCommon vtkCommonPythonD)
  SET_TARGET_PROPERTIES(vtkvmtkCommonPython PROPERTIES COMPILE_FLAGS -fPIC)
  TARGET_LINK_LIBRARIES (vtkvmtkCommonPython vtkvmtkCommonPythonD)
  IF(WIN32 AND NOT CYGWIN)
     SET_TARGET_PROPERTIES(vtkvmtkCommonPython PROPERTIES SUFFIX ".pyd")
  ENDIF(WIN32 AND NOT CYGWIN)
  INSTALL(TARGETS vtkvmtkCommonPythonD
    LIBRARY DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
    ARCHIVE DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
    RUNTIME DESTINATION ${VTK_VMTK_INSTALL_BIN_DIR} 
    COMPONENT RuntimeLibraries
    )
  INSTALL(TARGETS vtkvmtkCommonPython
    LIBRARY DESTINATION ${VTK_VMTK_MODULE_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
  )
ENDIF (VTK_WRAP_PYTHON AND VTK_VMTK_WRAP_PYTHON)

IF (VTK_WRAP_TCL AND VTK_VMTK_WRAP_TCL)
  SET(VTK_WRAP_HINTS ${VTK_VMTK_SOURCE_DIR}/Wrapping/Tcl/hints)
  VTK_WRAP_TCL3(vtkvmtkCommonTCL VTK_VMTK_COMMON_TCL_SRCS "${VTK_VMTK_COMMON_SRCS}" "")
  ADD_LIBRARY(vtkvmtkCommonTCL ${VTK_VMTK_COMMON_TCL_SRCS})
  TARGET_LINK_LIBRARIES(vtkvmtkCommonTCL vtkvmtkCommon vtkCommon vtkCommonTCL)  

  INSTALL(TARGETS vtkvmtkCommonTCL
    LIBRARY DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
    ARCHIVE DESTINATION ${VTK_VMTK_INSTALL_LIB_DIR} 
    RUNTIME DESTINATION ${VTK_VMTK_INSTALL_BIN_DIR} 
    COMPONENT RuntimeLibraries
    )

  ### START VMTK IN SLICER PATCH ###
  IF (VTK_VMTK_IN_SLICER)
    SET(LIBS vtkvmtkCommonTCL)

    FOREACH(LIB ${LIBS})
      slicer3_set_modules_output_path(${LIB})
    ENDFOREACH(LIB ${LIBS})
    
    slicer3_install_modules(${LIBS})
  ENDIF (VTK_VMTK_IN_SLICER)
  ### END VMTK IN SLICER PATCH ###

ENDIF (VTK_WRAP_TCL AND VTK_VMTK_WRAP_TCL)
